# Maven package Java project Web App to Linux on Azure
# Build your Java project and deploy it to Azure as a Linux web app
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'Java Demos 2'
  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Tomcat Info
  TOMCAT_HOME: /Users/selvasingh/apache-tomcat-8.5.29

# Azure Environment
  RESOURCEGROUP_NAME: e2e-java-tomcat-devops
  WEBAPP_NAME: petclinic-mysql-devops
  WEBAPP_PLAN_NAME: ${WEBAPP_NAME}-appservice-plan
  REGION: westus2

  MYSQL_SERVER_NAME: petclinic-mysql-02
  MYSQL_SERVER_FULL_NAME: ${MYSQL_SERVER_NAME}.mysql.database.azure.com
  MYSQL_SERVER_ADMIN_LOGIN_NAME: e2e-java-admin@petclinic-mysql-02
  MYSQL_SERVER_ADMIN_PASSWORD: petclinic\$P
  MYSQL_DATABASE_NAME: petclinic

# Bind Secrets at Runtime
  DOLLAR: \$

# Web app name
  webAppName: $(WEBAPP_NAME)

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: MavenPackageAndPublishArtifacts
    displayName: Maven Package and Publish Artifacts
    pool: 
      vmImage: $(vmImageName)
    
    steps:
    - task: Maven@3
      displayName: 'Maven Package'
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: false
        testResultsFiles: '**/TEST-*.xml'
        goals: 'package'
    
    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/*.?(war|jar)'
        TargetFolder: $(Build.ArtifactStagingDirectory)

    - upload: $(Build.ArtifactStagingDirectory)
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployLinuxWebApp
    displayName: Deploy Linux Web App
    environment: 'development'
    pool: 
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              appName: $(webAppName)
              package: $(Pipeline.Workspace)/drop/**/target/*.?(war|jar)
              startUpCommand: 'mvnw jetty:run-war -P MySQL'
              configurationStrings: 'jdbc:mysql://MYSQL_SERVER_FULL_NAME/MYSQL_DATABASE_NAME?useSSL=true&requireSSL=false&autoReconnect=true&user=MYSQL_SERVER_ADMIN_LOGIN_NAME&password=MYSQL_SERVER_ADMIN_PASSWORD'