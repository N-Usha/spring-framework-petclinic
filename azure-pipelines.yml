# Maven package Java project Web App to Linux on Azure
# Build your Java project and deploy it to Azure as a Linux web app
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

variables:
  # Secrets from a Variable group linked with an Azure key vault 
- group: TestVG
  
  # Azure Resource Manager connection created during pipeline creation
- name: azureSubscription
  value: 'Java Demos 2'
  
  # Agent VM image name
- name: vmImageName
  value: 'ubuntu-latest'

# Web app name
- name: webAppName
  value: $(WEBAPP-NAME)

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: MavenPackageAndPublishArtifacts
    displayName: Maven Package and Publish Artifacts
    pool: 
      vmImage: $(vmImageName)
    
    steps:
    - task: Maven@3
      displayName: 'Maven Package'
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.8'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: false
        testResultsFiles: '**/TEST-*.xml'
        goals: 'package'
    
    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/*.?(war|jar)'
        TargetFolder: $(Build.ArtifactStagingDirectory)

    - upload: $(Build.ArtifactStagingDirectory)
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployLinuxWebApp
    displayName: Deploy Linux Web App
    environment: 'development'
    pool: 
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              appName: $(webAppName)
              package: $(Pipeline.Workspace)/drop/**/target/*.?(war|jar)
              appSettings: '-RESOURCEGROUP_NAME $(RESOURCEGROUP-NAME) -TOMCAT_HOME ;$(TOMCAT-HOME) -WEBAPP_NAME $(WEBAPP-NAME) -WEBAPP_PLAN_NAME $(WEBAPP-PLAN-NAME) -REGION $(REGION) -MYSQL_SERVER_NAME $(MYSQL-SERVER-NAME) -MYSQL_SERVER_FULL_NAME $(MYSQL-SERVER-FULL-NAME) -MYSQL_SERVER_ADMIN_LOGIN_NAME $(MYSQL-SERVER-ADMIN-LOGIN-NAME) -MYSQL_SERVER_ADMIN_PASSWORD $(MYSQL-SERVER_-ADMIN-PASSWORD) -MYSQL_DATABASE_NAME $(MYSQL-DATABASE-NAME) -DOLLAR $(DOLLAR)'
            
          # - task: AzureCLI@1
          #   displayName: 'Set Connection string on Web App using Azure CLI'
          #   inputs:
          #     azureSubscription: $(azureSubscription)
          #     scriptLocation: inlineScript
          #     inlineScript: 'az webapp config connection-string set -g $(RESOURCEGROUP_NAME) -n $(webAppName) -t mysql --settings mysql1=Server=$(MYSQL_SERVER_FULL_NAME);Database=$(MYSQL_DATABASE_NAME);Uid=$(MYSQL_SERVER_ADMIN_LOGIN_NAME);Pwd=$(MYSQL_SERVER_ADMIN_PASSWORD);'